/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IOrders, IOrdersInterface } from "../../contracts/IOrders";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "approveByExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_cand",
        type: "address",
      },
    ],
    name: "becomeCandidate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_cand",
        type: "address",
      },
    ],
    name: "cancelBeingCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "cancelByExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "chooseCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minLockValueInWei",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_ipfsDetails",
        type: "string",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "position",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priority",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockValueInWei",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ipfsDetails",
            type: "string",
          },
          {
            internalType: "address",
            name: "executor",
            type: "address",
          },
          {
            internalType: "enum OrderState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bool",
                name: "notRejected",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "lockedValueInWei",
                type: "uint256",
              },
            ],
            internalType: "struct Candidate[]",
            name: "candidates",
            type: "tuple[]",
          },
        ],
        internalType: "struct Order",
        name: "o",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "position",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priority",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockValueInWei",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ipfsDetails",
            type: "string",
          },
          {
            internalType: "address",
            name: "executor",
            type: "address",
          },
          {
            internalType: "enum OrderState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bool",
                name: "notRejected",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "lockedValueInWei",
                type: "uint256",
              },
            ],
            internalType: "struct Candidate[]",
            name: "candidates",
            type: "tuple[]",
          },
        ],
        internalType: "struct Order",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "increasePriority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "markAsCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "markAsFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "markAsReady",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IOrders__factory {
  static readonly abi = _abi;
  static createInterface(): IOrdersInterface {
    return new utils.Interface(_abi) as IOrdersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOrders {
    return new Contract(address, _abi, signerOrProvider) as IOrders;
  }
}
