/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OwnableTxOrigin,
  OwnableTxOriginInterface,
} from "../../contracts/OwnableTxOrigin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261009c60201b60201c565b6100a460201b60201c565b61004767a790640ec0266a6860c01b61016860201b60201c565b61006167abd4a598db7db97760c01b61016860201b60201c565b61007b673c7fa0bf03fe676960c01b61016860201b60201c565b61009761008c61016b60201b60201c565b6100a460201b60201c565b6101c1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6000610187674d8142e76cdd055560c01b61016860201b60201c565b6101a167c032da267567269060c01b61016860201b60201c565b6101bb678ff093f8cf76b01360c01b61016860201b60201c565b32905090565b610536806101d06000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861009e565b6040516100659190610378565b60405180910390f35b610088600480360381019061008391906103c4565b6100c7565b005b61009261014a565b61009c600061022c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100cf61014a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361013e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013590610474565b60405180910390fd5b6101478161022c565b50565b61015e6722d5c52c7e8074e060c01b6102f0565b61017267967ea0a37470281760c01b6102f0565b6101866718b6f3a749fc9d6460c01b6102f0565b61019a6705367ddea8637cd860c01b6102f0565b6101a26102f3565b73ffffffffffffffffffffffffffffffffffffffff166101c061009e565b73ffffffffffffffffffffffffffffffffffffffff1614610216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020d906104e0565b60405180910390fd5b61022a67df27cff90be7f0a460c01b6102f0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6000610309674d8142e76cdd055560c01b6102f0565b61031d67c032da267567269060c01b6102f0565b610331678ff093f8cf76b01360c01b6102f0565b32905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061036282610337565b9050919050565b61037281610357565b82525050565b600060208201905061038d6000830184610369565b92915050565b600080fd5b6103a181610357565b81146103ac57600080fd5b50565b6000813590506103be81610398565b92915050565b6000602082840312156103da576103d9610393565b5b60006103e8848285016103af565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061045e6026836103f1565b915061046982610402565b604082019050919050565b6000602082019050818103600083015261048d81610451565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006104ca6020836103f1565b91506104d582610494565b602082019050919050565b600060208201905081810360008301526104f9816104bd565b905091905056fea2646970667358221220ec81bf29027a303bfb08fcdc8a910c258073368e52880f98e75e3f693b93e15664736f6c63430008110033";

type OwnableTxOriginConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableTxOriginConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnableTxOrigin__factory extends ContractFactory {
  constructor(...args: OwnableTxOriginConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OwnableTxOrigin> {
    return super.deploy(overrides || {}) as Promise<OwnableTxOrigin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnableTxOrigin {
    return super.attach(address) as OwnableTxOrigin;
  }
  override connect(signer: Signer): OwnableTxOrigin__factory {
    return super.connect(signer) as OwnableTxOrigin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableTxOriginInterface {
    return new utils.Interface(_abi) as OwnableTxOriginInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableTxOrigin {
    return new Contract(address, _abi, signerOrProvider) as OwnableTxOrigin;
  }
}
