/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Set, SetInterface } from "../../contracts/Set";

const _abi = [
  {
    inputs: [],
    name: "indices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "insert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610618806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632b7eafd2146100465780634cc822151461006457806390b5561d14610080575b600080fd5b61004e61009c565b60405161005b91906103b8565b60405180910390f35b61007e6004803603810190610079919061040b565b6100f4565b005b61009a6004803603810190610095919061040b565b610202565b005b606060018054806020026020016040519081016040528092919081815260200182805480156100ea57602002820191906000526020600020905b8154815260200190600101908083116100d6575b5050505050905090565b6100fd8161029e565b61013c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013390610495565b60405180910390fd5b6000600180808054905061015091906104e4565b8154811061016157610160610518565b5b906000526020600020015490506000806000848152602001908152602001600020549050806000808481526020019081526020016000208190555081600182815481106101b1576101b0610518565b5b90600052602060002001819055506000808481526020019081526020016000206000905560018054806101e7576101e6610547565b5b60019003818190600052602060002001600090559055505050565b61020b8161029e565b1561024b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610242906105c2565b60405180910390fd5b60018190806001815401808255809150506001900390600052602060002001600090919091909150556001808054905061028591906104e4565b6000808381526020019081526020016000208190555050565b600080600180549050036102b557600090506102eb565b81600160008085815260200190815260200160002054815481106102dc576102db610518565b5b90600052602060002001541490505b919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61032f8161031c565b82525050565b60006103418383610326565b60208301905092915050565b6000602082019050919050565b6000610365826102f0565b61036f81856102fb565b935061037a8361030c565b8060005b838110156103ab5781516103928882610335565b975061039d8361034d565b92505060018101905061037e565b5085935050505092915050565b600060208201905081810360008301526103d2818461035a565b905092915050565b600080fd5b6103e88161031c565b81146103f357600080fd5b50565b600081359050610405816103df565b92915050565b600060208284031215610421576104206103da565b5b600061042f848285016103f6565b91505092915050565b600082825260208201905092915050565b7f6b657920646f6573206e6f7420657869737420696e20746865207365742e0000600082015250565b600061047f601e83610438565b915061048a82610449565b602082019050919050565b600060208201905081810360008301526104ae81610472565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104ef8261031c565b91506104fa8361031c565b9250828203905081811115610512576105116104b5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f6b657920616c7265616479206578697374730000000000000000000000000000600082015250565b60006105ac601283610438565b91506105b782610576565b602082019050919050565b600060208201905081810360008301526105db8161059f565b905091905056fea2646970667358221220905a4d5a59789eec8ca6c40ecc32ff05d8ca93fb46ac87aded3e692eac7161b264736f6c63430008110033";

type SetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Set__factory extends ContractFactory {
  constructor(...args: SetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Set> {
    return super.deploy(overrides || {}) as Promise<Set>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Set {
    return super.attach(address) as Set;
  }
  override connect(signer: Signer): Set__factory {
    return super.connect(signer) as Set__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetInterface {
    return new utils.Interface(_abi) as SetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Set {
    return new Contract(address, _abi, signerOrProvider) as Set;
  }
}
