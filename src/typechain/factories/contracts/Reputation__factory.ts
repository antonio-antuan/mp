/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Reputation,
  ReputationInterface,
} from "../../contracts/Reputation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "successRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "manualRate",
        type: "uint256",
      },
    ],
    name: "measure",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610220806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636e56fed914610030575b600080fd5b61004a600480360381019061004591906100c8565b610060565b604051610057919061012a565b60405180910390f35b6000818385426100709190610174565b61007a91906101a8565b61008491906101a8565b90509392505050565b600080fd5b6000819050919050565b6100a581610092565b81146100b057600080fd5b50565b6000813590506100c28161009c565b92915050565b6000806000606084860312156100e1576100e061008d565b5b60006100ef868287016100b3565b9350506020610100868287016100b3565b9250506040610111868287016100b3565b9150509250925092565b61012481610092565b82525050565b600060208201905061013f600083018461011b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061017f82610092565b915061018a83610092565b92508282039050818111156101a2576101a1610145565b5b92915050565b60006101b382610092565b91506101be83610092565b92508282026101cc81610092565b915082820484148315176101e3576101e2610145565b5b509291505056fea2646970667358221220ca809bf74526c25299a2fd11d954a420d4a8b701f22a4ed199c549d24e34515d64736f6c63430008110033";

type ReputationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReputationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reputation__factory extends ContractFactory {
  constructor(...args: ReputationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Reputation> {
    return super.deploy(overrides || {}) as Promise<Reputation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Reputation {
    return super.attach(address) as Reputation;
  }
  override connect(signer: Signer): Reputation__factory {
    return super.connect(signer) as Reputation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReputationInterface {
    return new utils.Interface(_abi) as ReputationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reputation {
    return new Contract(address, _abi, signerOrProvider) as Reputation;
  }
}
