/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Mp, MpInterface } from "../../contracts/Mp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_participants",
        type: "address",
      },
      {
        internalType: "address",
        name: "_set",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comm",
        type: "address",
      },
      {
        internalType: "address",
        name: "_irep",
        type: "address",
      },
      {
        internalType: "address",
        name: "_orders",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "approveByExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "becomeCandidate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "cancelBeingCandidate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "cancelByExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "changeCommissionsAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "changeDoersAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ordersAddress",
        type: "address",
      },
    ],
    name: "changeOrdersAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "changeSetAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "chooseCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "commissions",
    outputs: [
      {
        internalType: "contract ICommission",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockValueInWei",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "ipfsDetails",
        type: "string",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "priority",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockValueInWei",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ipfsDetails",
            type: "string",
          },
          {
            internalType: "address",
            name: "executor",
            type: "address",
          },
          {
            internalType: "enum OrderState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bool",
                name: "notRejected",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "lockedValueInWei",
                type: "uint256",
              },
            ],
            internalType: "struct Candidate[]",
            name: "candidates",
            type: "tuple[]",
          },
        ],
        internalType: "struct Order",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "limit",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "offset",
        type: "uint8",
      },
    ],
    name: "getPendingOrdersBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "increaseOrderPriority",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "markAsDone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "markAsFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "markAsReady",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prior",
        type: "uint256",
      },
    ],
    name: "minCommissionForPriority",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newDoer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "orders",
    outputs: [
      {
        internalType: "contract IOrders",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ordersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "participants",
    outputs: [
      {
        internalType: "contract IParticipants",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priority",
        type: "uint256",
      },
    ],
    name: "pendingOrdersOfPriorityCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reputation",
    outputs: [
      {
        internalType: "contract IReputation",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003458380380620034588339818101604052810190620000379190620002dd565b620000576200004b620001a760201b60201c565b620001af60201b60201c565b84600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000365565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002a58262000278565b9050919050565b620002b78162000298565b8114620002c357600080fd5b50565b600081519050620002d781620002ac565b92915050565b600080600080600060a08688031215620002fc57620002fb62000273565b5b60006200030c88828901620002c6565b95505060206200031f88828901620002c6565b94505060406200033288828901620002c6565b93505060606200034588828901620002c6565b92505060806200035888828901620002c6565b9150509295509295909350565b6130e380620003756000396000f3fe6080604052600436106101b65760003560e01c80636c4470fb116100ec578063c52164c61161008a578063d97ecd8811610064578063d97ecd8814610583578063dc9b3add146105ac578063f2ccf032146105e9578063f2fde38b14610612576101b6565b8063c52164c6146104f2578063d09ef2411461051d578063d74de14d1461055a576101b6565b80638da5cb5b116100c65780638da5cb5b146104595780639446872014610484578063a6db4ce2146104ad578063b00dcb63146104c9576101b6565b80636c4470fb146103ec578063715018a614610417578063790aed171461042e576101b6565b806335daa731116101595780634fb764c9116101335780634fb764c91461033257806350a39a151461035d578063514fcac71461039a57806361eebdd6146103c3576101b6565b806335daa731146102c75780634de3b698146102f25780634e543def1461031b576101b6565b80630e540b3a116101955780630e540b3a146102365780631673d80c1461025257806325f8d1741461026e5780632b7799a2146102ab576101b6565b80622bdfca146101bb578063069cb198146101e457806306e197901461020d575b600080fd5b3480156101c757600080fd5b506101e260048036038101906101dd9190611e66565b61063b565b005b3480156101f057600080fd5b5061020b60048036038101906102069190611ef1565b610757565b005b34801561021957600080fd5b50610234600480360381019061022f9190611e66565b6107a3565b005b610250600480360381019061024b9190612064565b61096d565b005b61026c60048036038101906102679190611e66565b610ab1565b005b34801561027a57600080fd5b5061029560048036038101906102909190611e66565b610c48565b6040516102a291906120cf565b60405180910390f35b6102c560048036038101906102c09190611e66565b610d13565b005b3480156102d357600080fd5b506102dc610e81565b6040516102e991906120cf565b60405180910390f35b3480156102fe57600080fd5b5061031960048036038101906103149190611e66565b610f19565b005b34801561032757600080fd5b50610330610fa9565b005b34801561033e57600080fd5b50610347611113565b6040516103549190612149565b60405180910390f35b34801561036957600080fd5b50610384600480360381019061037f9190611e66565b611139565b60405161039191906120cf565b60405180910390f35b3480156103a657600080fd5b506103c160048036038101906103bc9190611e66565b6112d9565b005b3480156103cf57600080fd5b506103ea60048036038101906103e59190611ef1565b6113f6565b005b3480156103f857600080fd5b50610401611442565b60405161040e9190612185565b60405180910390f35b34801561042357600080fd5b5061042c611468565b005b34801561043a57600080fd5b5061044361147c565b60405161045091906121c1565b60405180910390f35b34801561046557600080fd5b5061046e6114a2565b60405161047b91906121eb565b60405180910390f35b34801561049057600080fd5b506104ab60048036038101906104a69190611ef1565b6114cb565b005b6104c760048036038101906104c29190611e66565b611517565b005b3480156104d557600080fd5b506104f060048036038101906104eb9190612206565b6115a9565b005b3480156104fe57600080fd5b5061050761163c565b6040516105149190612267565b60405180910390f35b34801561052957600080fd5b50610544600480360381019061053f9190611e66565b611662565b6040516105519190612559565b60405180910390f35b34801561056657600080fd5b50610581600480360381019061057c9190611e66565b611712565b005b34801561058f57600080fd5b506105aa60048036038101906105a59190611e66565b6118dc565b005b3480156105b857600080fd5b506105d360048036038101906105ce91906125b4565b61196c565b6040516105e091906126a3565b60405180910390f35b3480156105f557600080fd5b50610610600480360381019061060b9190611ef1565b611b80565b005b34801561061e57600080fd5b5061063960048036038101906106349190611ef1565b611bcc565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16622bdfca826040518263ffffffff1660e01b815260040161069591906120cf565b600060405180830381600087803b1580156106af57600080fd5b505af11580156106c3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634cc82215826040518263ffffffff1660e01b815260040161072291906120cf565b600060405180830381600087803b15801561073c57600080fd5b505af1158015610750573d6000803e3d6000fd5b5050505050565b61075f611c4f565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306e19790826040518263ffffffff1660e01b81526004016107fe91906120cf565b600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b505050506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09ef241836040518263ffffffff1660e01b815260040161088d91906120cf565b600060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108d391906129e8565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b77838be826080015160006040518363ffffffff1660e01b8152600401610937929190612a40565b600060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340eb819434323487876040518663ffffffff1660e01b81526004016109d19493929190612ab3565b60006040518083038185885af11580156109ef573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f82011682018060405250810190610a199190612aff565b905080915050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166390b5561d826040518263ffffffff1660e01b8152600401610a7a91906120cf565b600060405180830381600087803b158015610a9457600080fd5b505af1158015610aa8573d6000803e3d6000fd5b50505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09ef241836040518263ffffffff1660e01b8152600401610b0e91906120cf565b600060405180830381865afa158015610b2b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b5491906129e8565b90506000610b7160018360000151610b6c9190612b8a565b610c48565b905080341015610bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bad90612c0a565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a8275f3f846040518263ffffffff1660e01b8152600401610c1191906120cf565b600060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b50505050505050565b600080610c5483611139565b905060008103610c6357600190505b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166307535c696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190612c2a565b6001610d019190612c57565b610d0b9190612cc8565b915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359fdf419336040518263ffffffff1660e01b8152600401610d6e91906121eb565b602060405180830381865afa158015610d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daf9190612cf9565b610dee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de590612d72565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e1cdfa223483336040518463ffffffff1660e01b8152600401610e4c929190612d92565b6000604051808303818588803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f149190612c2a565b905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634de3b698826040518263ffffffff1660e01b8152600401610f7491906120cf565b600060405180830381600087803b158015610f8e57600080fd5b505af1158015610fa2573d6000803e3d6000fd5b5050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637795f408336040518263ffffffff1660e01b815260040161100491906121eb565b600060405180830381600087803b15801561101e57600080fd5b505af1158015611032573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359fdf419336040518263ffffffff1660e01b815260040161109191906121eb565b602060405180830381865afa1580156110ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d29190612cf9565b611111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110890612d72565b60405180910390fd5b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632b7eafd26040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111af573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111d89190612e7e565b905060005b81518110156112ce5784600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09ef24184848151811061123857611237612ec7565b5b60200260200101516040518263ffffffff1660e01b815260040161125c91906120cf565b600060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112a291906129e8565b60000151036112bb576001836112b89190612b8a565b92505b80806112c690612ef6565b9150506111dd565b508192505050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340e58ee5826040518263ffffffff1660e01b815260040161133491906120cf565b600060405180830381600087803b15801561134e57600080fd5b505af1158015611362573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634cc82215826040518263ffffffff1660e01b81526004016113c191906120cf565b600060405180830381600087803b1580156113db57600080fd5b505af11580156113ef573d6000803e3d6000fd5b5050505050565b6113fe611c4f565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611470611c4f565b61147a6000611ccd565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6114d3611c4f565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637595f4a782336040518363ffffffff1660e01b8152600401611574929190612d92565b600060405180830381600087803b15801561158e57600080fd5b505af11580156115a2573d6000803e3d6000fd5b5050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b00dcb6383836040518363ffffffff1660e01b8152600401611606929190612d92565b600060405180830381600087803b15801561162057600080fd5b505af1158015611634573d6000803e3d6000fd5b505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61166a611d99565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09ef241836040518263ffffffff1660e01b81526004016116c591906120cf565b600060405180830381865afa1580156116e2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061170b91906129e8565b9050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0a6026c826040518263ffffffff1660e01b815260040161176d91906120cf565b600060405180830381600087803b15801561178757600080fd5b505af115801561179b573d6000803e3d6000fd5b505050506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09ef241836040518263ffffffff1660e01b81526004016117fc91906120cf565b600060405180830381865afa158015611819573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061184291906129e8565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b77838be826080015160016040518363ffffffff1660e01b81526004016118a6929190612a40565b600060405180830381600087803b1580156118c057600080fd5b505af11580156118d4573d6000803e3d6000fd5b505050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d97ecd88826040518263ffffffff1660e01b815260040161193791906120cf565b600060405180830381600087803b15801561195157600080fd5b505af1158015611965573d6000803e3d6000fd5b5050505050565b60606000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632b7eafd26040518163ffffffff1660e01b8152600401600060405180830381865afa1580156119dd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611a069190612e7e565b90506000815103611a6357600067ffffffffffffffff811115611a2c57611a2b611f39565b5b604051908082528060200260200182016040528015611a5a5781602001602082028036833780820191505090505b50915050611b7a565b60008385611a719190612f3e565b60ff16905060008560ff1682611a879190612b8a565b905060018351611a979190612f7b565b811115611aaf5760018351611aac9190612f7b565b90505b60008282611abd9190612f7b565b67ffffffffffffffff811115611ad657611ad5611f39565b5b604051908082528060200260200182016040528015611b045781602001602082028036833780820191505090505b50905060008390505b8760ff1684611b1c9190612b8a565b811015611b7157848181518110611b3657611b35612ec7565b5b602002602001015182835181518110611b5257611b51612ec7565b5b6020026020010181815250508080611b6990612ef6565b915050611b0d565b50809450505050505b92915050565b611b88611c4f565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611bd4611c4f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3a90613021565b60405180910390fd5b611c4c81611ccd565b50565b611c57611d91565b73ffffffffffffffffffffffffffffffffffffffff16611c756114a2565b73ffffffffffffffffffffffffffffffffffffffff1614611ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc29061308d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610100016040528060008152602001600081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006006811115611df257611df161231f565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611e4381611e30565b8114611e4e57600080fd5b50565b600081359050611e6081611e3a565b92915050565b600060208284031215611e7c57611e7b611e26565b5b6000611e8a84828501611e51565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ebe82611e93565b9050919050565b611ece81611eb3565b8114611ed957600080fd5b50565b600081359050611eeb81611ec5565b92915050565b600060208284031215611f0757611f06611e26565b5b6000611f1584828501611edc565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f7182611f28565b810181811067ffffffffffffffff82111715611f9057611f8f611f39565b5b80604052505050565b6000611fa3611e1c565b9050611faf8282611f68565b919050565b600067ffffffffffffffff821115611fcf57611fce611f39565b5b611fd882611f28565b9050602081019050919050565b82818337600083830152505050565b600061200761200284611fb4565b611f99565b90508281526020810184848401111561202357612022611f23565b5b61202e848285611fe5565b509392505050565b600082601f83011261204b5761204a611f1e565b5b813561205b848260208601611ff4565b91505092915050565b6000806040838503121561207b5761207a611e26565b5b600061208985828601611e51565b925050602083013567ffffffffffffffff8111156120aa576120a9611e2b565b5b6120b685828601612036565b9150509250929050565b6120c981611e30565b82525050565b60006020820190506120e460008301846120c0565b92915050565b6000819050919050565b600061210f61210a61210584611e93565b6120ea565b611e93565b9050919050565b6000612121826120f4565b9050919050565b600061213382612116565b9050919050565b61214381612128565b82525050565b600060208201905061215e600083018461213a565b92915050565b600061216f82612116565b9050919050565b61217f81612164565b82525050565b600060208201905061219a6000830184612176565b92915050565b60006121ab82612116565b9050919050565b6121bb816121a0565b82525050565b60006020820190506121d660008301846121b2565b92915050565b6121e581611eb3565b82525050565b600060208201905061220060008301846121dc565b92915050565b6000806040838503121561221d5761221c611e26565b5b600061222b85828601611e51565b925050602061223c85828601611edc565b9150509250929050565b600061225182612116565b9050919050565b61226181612246565b82525050565b600060208201905061227c6000830184612258565b92915050565b61228b81611e30565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122cb5780820151818401526020810190506122b0565b60008484015250505050565b60006122e282612291565b6122ec818561229c565b93506122fc8185602086016122ad565b61230581611f28565b840191505092915050565b61231981611eb3565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6007811061235f5761235e61231f565b5b50565b60008190506123708261234e565b919050565b600061238082612362565b9050919050565b61239081612375565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b6123d7816123c2565b82525050565b6060820160008201516123f36000850182612310565b50602082015161240660208501826123ce565b5060408201516124196040850182612282565b50505050565b600061242b83836123dd565b60608301905092915050565b6000602082019050919050565b600061244f82612396565b61245981856123a1565b9350612464836123b2565b8060005b8381101561249557815161247c888261241f565b975061248783612437565b925050600181019050612468565b5085935050505092915050565b6000610100830160008301516124bb6000860182612282565b5060208301516124ce6020860182612282565b5060408301516124e16040860182612282565b50606083015184820360608601526124f982826122d7565b915050608083015161250e6080860182612310565b5060a083015161252160a0860182612387565b5060c083015161253460c0860182612310565b5060e083015184820360e086015261254c8282612444565b9150508091505092915050565b6000602082019050818103600083015261257381846124a2565b905092915050565b600060ff82169050919050565b6125918161257b565b811461259c57600080fd5b50565b6000813590506125ae81612588565b92915050565b600080604083850312156125cb576125ca611e26565b5b60006125d98582860161259f565b92505060206125ea8582860161259f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061262c8383612282565b60208301905092915050565b6000602082019050919050565b6000612650826125f4565b61265a81856125ff565b935061266583612610565b8060005b8381101561269657815161267d8882612620565b975061268883612638565b925050600181019050612669565b5085935050505092915050565b600060208201905081810360008301526126bd8184612645565b905092915050565b600080fd5b600080fd5b6000815190506126de81611e3a565b92915050565b60006126f76126f284611fb4565b611f99565b90508281526020810184848401111561271357612712611f23565b5b61271e8482856122ad565b509392505050565b600082601f83011261273b5761273a611f1e565b5b815161274b8482602086016126e4565b91505092915050565b60008151905061276381611ec5565b92915050565b6007811061277657600080fd5b50565b60008151905061278881612769565b92915050565b600067ffffffffffffffff8211156127a9576127a8611f39565b5b602082029050602081019050919050565b600080fd5b6127c8816123c2565b81146127d357600080fd5b50565b6000815190506127e5816127bf565b92915050565b600060608284031215612801576128006126c5565b5b61280b6060611f99565b9050600061281b84828501612754565b600083015250602061282f848285016127d6565b6020830152506040612843848285016126cf565b60408301525092915050565b600061286261285d8461278e565b611f99565b90508083825260208201905060608402830185811115612885576128846127ba565b5b835b818110156128ae578061289a88826127eb565b845260208401935050606081019050612887565b5050509392505050565b600082601f8301126128cd576128cc611f1e565b5b81516128dd84826020860161284f565b91505092915050565b600061010082840312156128fd576128fc6126c5565b5b612908610100611f99565b90506000612918848285016126cf565b600083015250602061292c848285016126cf565b6020830152506040612940848285016126cf565b604083015250606082015167ffffffffffffffff811115612964576129636126ca565b5b61297084828501612726565b606083015250608061298484828501612754565b60808301525060a061299884828501612779565b60a08301525060c06129ac84828501612754565b60c08301525060e082015167ffffffffffffffff8111156129d0576129cf6126ca565b5b6129dc848285016128b8565b60e08301525092915050565b6000602082840312156129fe576129fd611e26565b5b600082015167ffffffffffffffff811115612a1c57612a1b611e2b565b5b612a28848285016128e6565b91505092915050565b612a3a816123c2565b82525050565b6000604082019050612a5560008301856121dc565b612a626020830184612a31565b9392505050565b600082825260208201905092915050565b6000612a8582612291565b612a8f8185612a69565b9350612a9f8185602086016122ad565b612aa881611f28565b840191505092915050565b6000608082019050612ac860008301876121dc565b612ad560208301866120c0565b612ae260408301856120c0565b8181036060830152612af48184612a7a565b905095945050505050565b60008060408385031215612b1657612b15611e26565b5b600083015167ffffffffffffffff811115612b3457612b33611e2b565b5b612b40858286016128e6565b9250506020612b51858286016126cf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b9582611e30565b9150612ba083611e30565b9250828201905080821115612bb857612bb7612b5b565b5b92915050565b7f636f6d6d697373696f6e206973206e6f7420656e6f7567680000000000000000600082015250565b6000612bf4601883612a69565b9150612bff82612bbe565b602082019050919050565b60006020820190508181036000830152612c2381612be7565b9050919050565b600060208284031215612c4057612c3f611e26565b5b6000612c4e848285016126cf565b91505092915050565b6000612c6282611e30565b9150612c6d83611e30565b9250828202612c7b81611e30565b91508282048414831517612c9257612c91612b5b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612cd382611e30565b9150612cde83611e30565b925082612cee57612ced612c99565b5b828204905092915050565b600060208284031215612d0f57612d0e611e26565b5b6000612d1d848285016127d6565b91505092915050565b7f696e76616c696420646f65720000000000000000000000000000000000000000600082015250565b6000612d5c600c83612a69565b9150612d6782612d26565b602082019050919050565b60006020820190508181036000830152612d8b81612d4f565b9050919050565b6000604082019050612da760008301856120c0565b612db460208301846121dc565b9392505050565b600067ffffffffffffffff821115612dd657612dd5611f39565b5b602082029050602081019050919050565b6000612dfa612df584612dbb565b611f99565b90508083825260208201905060208402830185811115612e1d57612e1c6127ba565b5b835b81811015612e465780612e3288826126cf565b845260208401935050602081019050612e1f565b5050509392505050565b600082601f830112612e6557612e64611f1e565b5b8151612e75848260208601612de7565b91505092915050565b600060208284031215612e9457612e93611e26565b5b600082015167ffffffffffffffff811115612eb257612eb1611e2b565b5b612ebe84828501612e50565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612f0182611e30565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f3357612f32612b5b565b5b600182019050919050565b6000612f498261257b565b9150612f548361257b565b9250828202612f628161257b565b9150808214612f7457612f73612b5b565b5b5092915050565b6000612f8682611e30565b9150612f9183611e30565b9250828203905081811115612fa957612fa8612b5b565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061300b602683612a69565b915061301682612faf565b604082019050919050565b6000602082019050818103600083015261303a81612ffe565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613077602083612a69565b915061308282613041565b602082019050919050565b600060208201905081810360008301526130a68161306a565b905091905056fea2646970667358221220eebb9cab6a1bba10351038381f1ef5262e558911e0fde80c47b94081bbb9e96a64736f6c63430008110033";

type MpConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MpConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mp__factory extends ContractFactory {
  constructor(...args: MpConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _participants: PromiseOrValue<string>,
    _set: PromiseOrValue<string>,
    _comm: PromiseOrValue<string>,
    _irep: PromiseOrValue<string>,
    _orders: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Mp> {
    return super.deploy(
      _participants,
      _set,
      _comm,
      _irep,
      _orders,
      overrides || {}
    ) as Promise<Mp>;
  }
  override getDeployTransaction(
    _participants: PromiseOrValue<string>,
    _set: PromiseOrValue<string>,
    _comm: PromiseOrValue<string>,
    _irep: PromiseOrValue<string>,
    _orders: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _participants,
      _set,
      _comm,
      _irep,
      _orders,
      overrides || {}
    );
  }
  override attach(address: string): Mp {
    return super.attach(address) as Mp;
  }
  override connect(signer: Signer): Mp__factory {
    return super.connect(signer) as Mp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MpInterface {
    return new utils.Interface(_abi) as MpInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Mp {
    return new Contract(address, _abi, signerOrProvider) as Mp;
  }
}
