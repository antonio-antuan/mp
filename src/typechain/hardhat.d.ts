/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Commission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Commission__factory>;
    getContractFactory(
      name: "ICommission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICommission__factory>;
    getContractFactory(
      name: "IOrders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOrders__factory>;
    getContractFactory(
      name: "IParticipants",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IParticipants__factory>;
    getContractFactory(
      name: "IReputation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReputation__factory>;
    getContractFactory(
      name: "ISet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISet__factory>;
    getContractFactory(
      name: "Mp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mp__factory>;
    getContractFactory(
      name: "Orders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Orders__factory>;
    getContractFactory(
      name: "Participants",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Participants__factory>;
    getContractFactory(
      name: "Reputation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reputation__factory>;
    getContractFactory(
      name: "Set",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Set__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Commission",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Commission>;
    getContractAt(
      name: "ICommission",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICommission>;
    getContractAt(
      name: "IOrders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOrders>;
    getContractAt(
      name: "IParticipants",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IParticipants>;
    getContractAt(
      name: "IReputation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IReputation>;
    getContractAt(
      name: "ISet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISet>;
    getContractAt(
      name: "Mp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mp>;
    getContractAt(
      name: "Orders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Orders>;
    getContractAt(
      name: "Participants",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Participants>;
    getContractAt(
      name: "Reputation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Reputation>;
    getContractAt(
      name: "Set",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Set>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
